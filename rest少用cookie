REST（Representational State Transfer）是一种软件架构风格，它强调无状态性、可缓存性和客户端-服务器通信。虽然REST本身并不完全禁止使用Cookie，但是随着Web开发的演进，越来越多的开发者选择了其他的认证和状态管理机制。以下是一些可能导致这种趋势的原因：

### 1. 无状态性
REST强调无状态性，这意味着每个HTTP请求都应该包含处理该请求所需的所有信息，服务器不应该存储关于客户端的任何状态信息。Cookies通常用于在服务器和客户端之间保持状态信息（如用户登录状态），这与REST的无状态原则相冲突。

### 2. 跨域问题
Cookies在跨域请求中会面临一些限制和复杂性。虽然有方法可以设置跨域Cookie，但这需要额外的配置，并可能引入安全漏洞。

### 3. 移动应用和单页应用
随着移动应用和单页应用的流行，很多开发者转向使用如OAuth和Token-Based Authentication等更适合这些类型应用的认证机制。这些机制通常不依赖于Cookie，而是将认证令牌存储在HTTP头部或应用的存储中。

### 4. 安全考虑
Cookies可能会受到各种攻击，如跨站脚本攻击（XSS）和跨站请求伪造攻击（CSRF）。虽然有方法可以减轻这些风险，但使用Token-Based Authentication并将令牌存储在HTTP头部或应用的存储中被认为是一种更安全的替代方案。

### 5. 简化的前后端分离
使用无状态的认证机制（如Bearer Token）可以简化前后端分离的架构，因为前端和后端可以独立地进行开发和部署，它们之间通过标准的HTTP头部进行通信。

### 小结
虽然REST并不完全禁止使用Cookie，但上述原因导致了开发者趋向于使用其他认证和状态管理机制。这不意味着Cookie完全没有用武之地，但在构建符合REST原则的系统时，开发者通常会寻找其他解决方案。

https://zhuanlan.zhihu.com/p/625995458

https://juejin.cn/post/7111349594625146887